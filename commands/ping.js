/**
 Copyright (C) 2022.
 Licensed under the  GPL-3.0 License;
 You may not use this file except in compliance with the License.
 It is supplied in the hope that it may be useful.
 * @project_name : Secktor-Md
 * @author : SamPandey001 <https://github.com/SamPandey001>
 * @description : Secktor,A Multi-functional whatsapp bot.
 * @version 0.0.6
 **/

//---------------------------------------------------------------------------
const os = require('os')
const moment = require("moment-timezone")
const fs = require("fs")
const Secktor = require('../lib')
const Config = require('../config')
const { fancytext, tlang, tiny, runtime, formatp, botpic, prefix, fetchJson,cmd, sck1 } = require("../lib");
let gis = require("g-i-s");
const axios = require('axios')
const speed = require('performance-now')
const long = String.fromCharCode(8206)
const readmore = long.repeat(4001)

Secktor.cmd({
        pattern: "pong",
        desc: "To check ping",
        filename: __filename,
    },
    async(Void, citel) => {
        var inital = new Date().getTime();
        await citel.reply('*_Testing Status of üêâ Dragon-MD-V3 ‚ùó_*');
        var final = new Date().getTime();
        return await citel.reply('‚öïÔ∏è Dragon MD Status ‚öïÔ∏è\n\n‚ò¢Ô∏è *Íú±·¥ò·¥á·¥á·¥Ö :-* ' + (final - inital) + ' ms\n‚è±Ô∏è *·¥ú·¥ò·¥õ…™·¥ç·¥á :-* ${runtime(process.uptime())} \nüìü *·¥ç·¥á·¥ç·¥è Ä è ·¥úÍú±·¥Ä…¢·¥á :-* ${formatp(os.totalmem() - os.freemem())}/${formatp(os.totalmem())}');
    }
);


Secktor.cmd({
            pattern: "ping",
            alias: ["menu"],
            desc: "Help list",
            category: "general",
            react: "üê≤",
            filename: __filename
        },
        async(Void, citel, text) => {
            if (${prefix}ping) return citel.reply(`_*üñáÔ∏è ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂∏‡∂ß YouTube Link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ñ‡∑ù ‡∂±‡∂∏‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂± ‚ùó*_\n*‡∂ã‡∂Ø‡∑è:-* _${prefix}song [‡∂±‡∂∏ ‡∑Ñ‡∑ù ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑î‡∑Ä]_`);
             const { commands } = require('../lib');
            if (text.split(" ")[0]) {
                let arr = [];
                const cmd = commands.find((cmd) => cmd.pattern === (text.split(" ")[0].toLowerCase()))
                if (!cmd) return await citel.reply("*‚ùåNo Such commands.*");
                else arr.push(`*üçÅCommand:* ${cmd.pattern}`);
                if (cmd.category) arr.push(`*üß©Category:* ${cmd.category}`);
                if (cmd.alias) arr.push(`*üß©Alias:* ${cmd.alias}`);
                if (cmd.desc) arr.push(`*üß©Description:* ${cmd.desc}`);
                if (cmd.use) arr.push(`*„ÄΩÔ∏èUsage:*\n \`\`\`${prefix}${cmd.pattern} ${cmd.use}\`\`\``);
                return await citel.reply(arr.join('\n'));
            } else {
                const cmds = {}
                commands.map(async(command, index) => {
                    if (command.dontAddCommandList === false && command.pattern !== undefined) {
                        if (!cmds[command.category]) cmds[command.category] = []
                        cmds[command.category].push(command.pattern)
                    }
                })
                const time = moment(moment())
                    .format('HH:mm:ss')
                moment.tz.setDefault('Asia/COLOMBO')
                    .locale('id')
                const date = moment.tz('Asia/Colombo').format('DD/MM/YYYY')
                let total = await sck1.countDocuments()
                let str = `‚öïÔ∏è Dragon MD Status ‚öï\n\n`
                str +=
                    `‚ò¢Ô∏è *Íú±·¥ò·¥á·¥á·¥Ö :-* + $(final - inital) + ' ms
‚è±Ô∏è *·¥ú·¥ò·¥õ…™·¥ç·¥á :-* ${runtime(process.uptime())} 
üìü *·¥ç·¥á·¥ç·¥è Ä è ·¥úÍú±·¥Ä…¢·¥á :-* ${formatp(os.totalmem() - os.freemem())}/${formatp(os.totalmem())}
üìÜ *·¥Ö·¥Ä·¥õ·¥á :-* ${date}
‚è∞ *·¥õ…™·¥ç·¥á :-* ${time}
`

                let generatebutton = [{
                    buttonId: `${prefix}owner`,
                    buttonText: {
                        displayText: 'ü§µ ·¥è·¥°…¥·¥á Ä'
                    },
                    type: 1
                }]
                let buttonMessaged = {
                    image: { url: await botpic() },
                    caption: str,
                    footer: tlang().title,
                    headerType: 4,
                    buttons: generatebutton
                };
                return await Void.sendMessage(citel.chat, buttonMessaged);
            }
        }
    )